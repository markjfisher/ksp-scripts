local tr is import("lib/transfer").local mission is import("lib/mission").local descent is import("lib/descent").local TGT_RETALT is 35000.local RENT_BURNALT is 100000.local fr is tr:freeze. local warping is false. local m is mission({parameter seq,ev,next. seq:add({parameter a. lock steering to heading(90,90).lock throttle to 1.wait 2.lock steering to heading(90,45).wait until apoapsis>a. lock throttle to 0.gear off. tr:circ_apo(20).local bms is addons:astrogator:calculateBurns(Kerbin).tr:seek_SOI(Kerbin,a,bms[0]:atTime,0,20,bms).tr:exec(true,20).next().}).seq:add({parameter a. local transition_time is time:seconds+eta:transition. warpto(transition_time).wait until time:seconds>=transition_time. next().}).seq:add({parameter a. if body=Kerbin{wait 10.tr:seek(fr(time:seconds+120),fr(0),fr(0),0,20,list(),{parameter mnv. return-abs(mnv:orbit:periapsis-TGT_RETALT).}).tr:exec(true,20).next().} else{wait 0.5.}}).seq:add({parameter a. if ship:altitude<RENT_BURNALT*10{set warp to 0. wait 1. next().} else{if not warping{set warping to true. set warp to 5.}wait 0.1.}}).seq:add({parameter a. if ship:altitude<RENT_BURNALT{ag10 off. lock steering to retrograde. wait 5. lock throttle to 1.wait until ship:maxthrust<1. lock throttle to 0. stage. wait 1. lock steering to srfretrograde. next().} else wait 0.5.}).seq:add({parameter a. if (ship:status="Landed" or ship:status="Splashed") next().else wait 0.5.}).}).export(m).